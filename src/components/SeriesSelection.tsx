import { useQuery } from "@tanstack/react-query";
import { get_series } from "../api/get-series";
import { LocationSelector } from "./LocataionSelector/LocationSelector";
import { LocationButton } from "./LocationButton/LocationButton";
import { DoorSeriesLayout } from "./DoorSeriesLayout/DoorSeriesLayout";
import { SeriesItem } from "./SeriesItem/SeriesItem";
import { Loader } from "./Loader/Loader";
import { Link } from "@tanstack/react-router";

interface Props {
    location?: string
}

export const SeriesSelection = ({ location }: Props) => {
    const query = useQuery({ queryKey: ["series", location], queryFn: () => get_series(location) });
    const queryData = query.data;
    return <div className="app">
        <LocationSelector>
            <Link to="/vhodnye-dveri-v-kvartiru">
                <LocationButton
                    header="В квартиру"
                    description="Входные двери для закрытых помещений без прямых солнечных лучей"
                    icon={(<svg width="44" height="48" viewBox="0 0 44 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M42.8214 45H40.8571V2.25C40.8571 1.00734 39.8018 0 38.5 0H5.5C4.19817 0 3.14286 1.00734 3.14286 2.25V45H1.17857C0.527705 45 0 45.5037 0 46.125V48H44V46.125C44 45.5037 43.4723 45 42.8214 45ZM12.5714 7.125C12.5714 6.50372 13.0991 6 13.75 6H17.6786C18.3294 6 18.8571 6.50372 18.8571 7.125V10.875C18.8571 11.4963 18.3294 12 17.6786 12H13.75C13.0991 12 12.5714 11.4963 12.5714 10.875V7.125ZM12.5714 16.125C12.5714 15.5037 13.0991 15 13.75 15H17.6786C18.3294 15 18.8571 15.5037 18.8571 16.125V19.875C18.8571 20.4963 18.3294 21 17.6786 21H13.75C13.0991 21 12.5714 20.4963 12.5714 19.875V16.125ZM17.6786 30H13.75C13.0991 30 12.5714 29.4963 12.5714 28.875V25.125C12.5714 24.5037 13.0991 24 13.75 24H17.6786C18.3294 24 18.8571 24.5037 18.8571 25.125V28.875C18.8571 29.4963 18.3294 30 17.6786 30ZM25.1429 45H18.8571V37.125C18.8571 36.5037 19.3848 36 20.0357 36H23.9643C24.6152 36 25.1429 36.5037 25.1429 37.125V45ZM31.4286 28.875C31.4286 29.4963 30.9009 30 30.25 30H26.3214C25.6706 30 25.1429 29.4963 25.1429 28.875V25.125C25.1429 24.5037 25.6706 24 26.3214 24H30.25C30.9009 24 31.4286 24.5037 31.4286 25.125V28.875ZM31.4286 19.875C31.4286 20.4963 30.9009 21 30.25 21H26.3214C25.6706 21 25.1429 20.4963 25.1429 19.875V16.125C25.1429 15.5037 25.6706 15 26.3214 15H30.25C30.9009 15 31.4286 15.5037 31.4286 16.125V19.875ZM31.4286 10.875C31.4286 11.4963 30.9009 12 30.25 12H26.3214C25.6706 12 25.1429 11.4963 25.1429 10.875V7.125C25.1429 6.50372 25.6706 6 26.3214 6H30.25C30.9009 6 31.4286 6.50372 31.4286 7.125V10.875Z" fill="black" />
                    </svg>)}
                    checked={location == "vhodnye-dveri-v-kvartiru"}
                    location="room"
                ></LocationButton>
            </Link>
            <Link to="/vhodnye-dveri-v-dom">
                <LocationButton
                    header="В дом"
                    description="Входные двери, выдерживающие повышенную влажность, низкие температуры."
                    icon={(<svg width="47" height="41" viewBox="0 0 47 41" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M22.8769 10.6365L7.83395 24.535V39.5356C7.83395 39.924 7.97149 40.2964 8.21631 40.5711C8.46113 40.8457 8.79318 41 9.13941 41L18.2825 40.9735C18.6276 40.9715 18.958 40.8164 19.2014 40.542C19.4448 40.2675 19.5814 39.8961 19.5814 39.509V30.7489C19.5814 30.3605 19.719 29.988 19.9638 29.7133C20.2086 29.4387 20.5406 29.2844 20.8869 29.2844H26.1087C26.4549 29.2844 26.787 29.4387 27.0318 29.7133C27.2766 29.988 27.4141 30.3605 27.4141 30.7489V39.5026C27.4136 39.6953 27.447 39.8862 27.5123 40.0644C27.5777 40.2426 27.6738 40.4046 27.7951 40.5411C27.9163 40.6776 28.0604 40.7858 28.2191 40.8597C28.3777 40.9336 28.5478 40.9716 28.7196 40.9716L37.8594 41C38.2056 41 38.5377 40.8457 38.7825 40.5711C39.0273 40.2964 39.1649 39.924 39.1649 39.5356V24.5249L24.1252 10.6365C23.9484 10.4766 23.7281 10.3894 23.501 10.3894C23.2739 10.3894 23.0537 10.4766 22.8769 10.6365ZM46.6386 20.0831L39.8176 13.7759V1.09834C39.8176 0.80704 39.7144 0.527674 39.5308 0.321696C39.3472 0.115718 39.0982 0 38.8385 0H34.2694C34.0097 0 33.7607 0.115718 33.5771 0.321696C33.3935 0.527674 33.2903 0.80704 33.2903 1.09834V7.74419L25.9855 1.00223C25.2845 0.35511 24.4048 0.00129361 23.497 0.00129361C22.5891 0.00129361 21.7095 0.35511 21.0084 1.00223L0.355327 20.0831C0.256184 20.175 0.174159 20.288 0.113938 20.4155C0.0537177 20.5429 0.016482 20.6825 0.00435871 20.8262C-0.00776456 20.9698 0.00546224 21.1147 0.0432834 21.2526C0.0811045 21.3906 0.142779 21.5187 0.224782 21.6299L2.30535 24.4673C2.38713 24.5788 2.48772 24.6712 2.60136 24.7391C2.715 24.807 2.83946 24.849 2.96762 24.8629C3.09577 24.8768 3.22511 24.8621 3.34821 24.8198C3.47132 24.7776 3.58579 24.7085 3.68505 24.6165L22.8769 6.88383C23.0537 6.72395 23.2739 6.63677 23.501 6.63677C23.7281 6.63677 23.9484 6.72395 24.1252 6.88383L43.3179 24.6165C43.417 24.7085 43.5312 24.7777 43.6542 24.8201C43.7771 24.8625 43.9063 24.8773 44.0343 24.8637C44.1624 24.8501 44.2868 24.8084 44.4005 24.7408C44.5141 24.6733 44.6148 24.5812 44.6967 24.47L46.7773 21.6327C46.8592 21.5209 46.9206 21.392 46.958 21.2535C46.9954 21.115 47.008 20.9695 46.9951 20.8255C46.9822 20.6815 46.9441 20.5418 46.8829 20.4144C46.8217 20.287 46.7387 20.1744 46.6386 20.0831Z" fill="black" />
                    </svg>)}
                    checked={location == "vhodnye-dveri-v-dom"}
                    location="house"
                ></LocationButton>
            </Link>
        </LocationSelector>
        <DoorSeriesLayout>
            {queryData && queryData.map((x, k) => <Link key={`l${k}`} to={`/${x.location}/${x.id}`}><SeriesItem attributes={{
                thickness: x.thickness,
                sound_absorption: x.sound_absorption,
                safety_rating: x.safety_rating,
                guarantee: x.guarantee,
                locking_points: x.locking_points,
                lock: x.locks
            }} id={x.id} title={x.title} price={x.min_price} image={x.image} key={k} description={x.description}></SeriesItem></Link>)}
        </DoorSeriesLayout>
        {query.isLoading && <Loader />}
    </div>;
}