/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VhodnyeDveriVKvartiruIdImport } from './routes/vhodnye-dveri-v-kvartiru/$id'
import { Route as VhodnyeDveriVDomIdImport } from './routes/vhodnye-dveri-v-dom/$id'

// Create Virtual Routes

const VhodnyeDveriVKvartiruIndexLazyImport = createFileRoute(
  '/vhodnye-dveri-v-kvartiru/',
)()
const VhodnyeDveriVDomIndexLazyImport = createFileRoute(
  '/vhodnye-dveri-v-dom/',
)()
const CatalogIndexLazyImport = createFileRoute('/catalog/')()
const CategorySlugLazyImport = createFileRoute('/category/$slug')()
const CatalogSlugLazyImport = createFileRoute('/catalog/$slug')()

// Create/Update Routes

const VhodnyeDveriVKvartiruIndexLazyRoute =
  VhodnyeDveriVKvartiruIndexLazyImport.update({
    path: '/vhodnye-dveri-v-kvartiru/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/vhodnye-dveri-v-kvartiru/index.lazy').then((d) => d.Route),
  )

const VhodnyeDveriVDomIndexLazyRoute = VhodnyeDveriVDomIndexLazyImport.update({
  path: '/vhodnye-dveri-v-dom/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/vhodnye-dveri-v-dom/index.lazy').then((d) => d.Route),
)

const CatalogIndexLazyRoute = CatalogIndexLazyImport.update({
  path: '/catalog/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/catalog/index.lazy').then((d) => d.Route))

const CategorySlugLazyRoute = CategorySlugLazyImport.update({
  path: '/category/$slug',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/category/$slug.lazy').then((d) => d.Route),
)

const CatalogSlugLazyRoute = CatalogSlugLazyImport.update({
  path: '/catalog/$slug',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/catalog/$slug.lazy').then((d) => d.Route))

const VhodnyeDveriVKvartiruIdRoute = VhodnyeDveriVKvartiruIdImport.update({
  path: '/vhodnye-dveri-v-kvartiru/$id',
  getParentRoute: () => rootRoute,
} as any)

const VhodnyeDveriVDomIdRoute = VhodnyeDveriVDomIdImport.update({
  path: '/vhodnye-dveri-v-dom/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/vhodnye-dveri-v-dom/$id': {
      id: '/vhodnye-dveri-v-dom/$id'
      path: '/vhodnye-dveri-v-dom/$id'
      fullPath: '/vhodnye-dveri-v-dom/$id'
      preLoaderRoute: typeof VhodnyeDveriVDomIdImport
      parentRoute: typeof rootRoute
    }
    '/vhodnye-dveri-v-kvartiru/$id': {
      id: '/vhodnye-dveri-v-kvartiru/$id'
      path: '/vhodnye-dveri-v-kvartiru/$id'
      fullPath: '/vhodnye-dveri-v-kvartiru/$id'
      preLoaderRoute: typeof VhodnyeDveriVKvartiruIdImport
      parentRoute: typeof rootRoute
    }
    '/catalog/$slug': {
      id: '/catalog/$slug'
      path: '/catalog/$slug'
      fullPath: '/catalog/$slug'
      preLoaderRoute: typeof CatalogSlugLazyImport
      parentRoute: typeof rootRoute
    }
    '/category/$slug': {
      id: '/category/$slug'
      path: '/category/$slug'
      fullPath: '/category/$slug'
      preLoaderRoute: typeof CategorySlugLazyImport
      parentRoute: typeof rootRoute
    }
    '/catalog/': {
      id: '/catalog/'
      path: '/catalog/'
      fullPath: '/catalog/'
      preLoaderRoute: typeof CatalogIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/vhodnye-dveri-v-dom/': {
      id: '/vhodnye-dveri-v-dom/'
      path: '/vhodnye-dveri-v-dom/'
      fullPath: '/vhodnye-dveri-v-dom/'
      preLoaderRoute: typeof VhodnyeDveriVDomIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/vhodnye-dveri-v-kvartiru/': {
      id: '/vhodnye-dveri-v-kvartiru/'
      path: '/vhodnye-dveri-v-kvartiru/'
      fullPath: '/vhodnye-dveri-v-kvartiru/'
      preLoaderRoute: typeof VhodnyeDveriVKvartiruIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  VhodnyeDveriVDomIdRoute,
  VhodnyeDveriVKvartiruIdRoute,
  CatalogSlugLazyRoute,
  CategorySlugLazyRoute,
  CatalogIndexLazyRoute,
  VhodnyeDveriVDomIndexLazyRoute,
  VhodnyeDveriVKvartiruIndexLazyRoute,
})

/* prettier-ignore-end */
